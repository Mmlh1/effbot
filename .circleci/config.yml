# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2

default-docker-config: &default-docker-config
  docker:
    - image: circleci/python:3.7.0
    - image: circleci/postgres:10.4
    

jobs:
  build:
    working_directory: ~/effbot
    <<: *default-docker-config

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    machine: true
    steps:
      - checkout
      - run:
        name: Deploy Master to Heroku
        command: |
          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
        # filters:
        #   branches:
        #     only:
        #       - master
